=====git学习笔记====
1.git init(初始化)、git add(加入)、git commit -m "..."(提交)、git rm(删除)
2.git status(状态)、git diff(查看不同)
3.git log、git log --pretty=oneline、git reset --hard HEAD^（HEAD~100/51497）、git reflog、git log --graph --pretty=oneline --abbrev-commit
4.git checkout -- file(撤回成最近一次状态) 、git checkout  file(切换分支)
5.git remote add origin git@....git(连接远程)、git push -u origin master(初始化分支)、git push origin master(不为空的分支)
6.重新生成ssh：cat ~/.ssh/id_rsa.pub 、rm -rf .ssh(删除所有) 、ssh-keygen -t rsa -C "email@example.com"
7.git pull(获取代码)、git clone  git@....git
8.hexo s --unsafe-perm=true --allow-root(增加权限)
9.git checkout -b dev(创建并指向dev分支)、git checkout -b dev origin/dev(创建远程并指向dev分支)、git branch dev(创建)、git checkout dev(指向)、git branch(查看)、git merge dev(合并dev)、git branch -d dev(删除)、git branch -D dev(强行删除)、git switch -c dev(创建并指向)、git switch master(指向)、git branch --set-upstream-to=origin/dev dev(建立本地dev分支和远程dev的链接)
10.git merge --no-ff -m "xxx" dev(禁用Fast forward)
11.实际开发时应该保持master稳定，开发都在其他分支，之后合并到master，发布新版本
12.git stash(存储代码)、git stash list(查看储存列表)、git stash apply+git stash drop=git stash pop(恢复并删除)、git stash apply stash@{0}
13.git cherry-pick 4c805e2(复制特定的提交)
14.git remote(查看远程库信息)、git remote -v(查看抓取推送权限信息)
15.git rebase(整理提交成一条直线)
16.git tag v1.0(创建一个版本标签)、git tag -a v0.9 -m "xxxxx" 7a451245)(指定commit打上标签)、git tag(查看所有版本)
17.git push origin v1.0(远程推送指定标签)、git push origin --tags(远程推送所有本地标签)、git tag -d v0.9(本地删除指定标签)、git push origin :refs/tags/v0.9(远程删除一个分支)