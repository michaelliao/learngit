really thanks
以下是学习使用中记下来的
	1. Git restore file
	和 git checkout -- file
	就是让这个文件回到最近一次git commit 和git add的状态
	在修改完还没 git add之前
	2. 在add完之后添加到暂缓区之后
	先 git reset HEAD file 或 git restore --staged file
	把暂缓区的退回到工作区 ，返回第一步场景
 
	3. 把本地库提交给远程库
	Git push origin master
	Origin:之前默认的远程库名字
4.把远程库克隆到本地库：
 git clone git@github.com:账户名/仓库名.git   -----通过此协议最快
Https 慢
1.git checkout -b 名称
创立一条分支 并切换到这条分支上

2.git branch 名称 创建分支

git checkout 名称 切换分支

3.Git branch -d 名称
	删除指向这条分支的指针
	
4. git merge 名称 合并分支到当前分支
------------>>>>>>>>>>
	通常合并，git能用则用 fast forward模式
缺点： 删除分支后没有分支信息，
合并时 --no-ff 
	合并时会生成一个commit ，会在log上产生合并消息，
-git merge --no-ff -m "合并时commit的信息 " dev

Git log 查看commit情况
加参数
 --graph  看到分支合并图
    --pretty=oneline 一行表示
--Abbrev-commit 简化commit编号

	1. Git tag 标签名
	默认给head加tag
	2. Git tag 标签名 commitID
	指定添加tag
3。Git tag -a 标签名 -m 标签信息 commit ID
、4.git tag 查看所有标签
 git show 标签名   查看标签信息

Git tag -d 标签名 删除本地标签
标签都只储存在本地，不会自动推送到远程
若推送标签至远程库：
Git push origin(远程库名字) 标签名
Git push origin --tags
