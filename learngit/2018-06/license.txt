git init 
git add + textname
git commit -m "descbrition"
git status 
git diff + textname
git checkout -- filename git add 之前
git reset HEAD filename git add 之後 git commit之前
git reset --hard commitid  版本回退 HEAD 也可以HEAD^^ commitid也可以（前几位）
git log 查看git提交历史
git reflog 查看git命令历史
git branch 查看分支
git branch branchname 创建分支
git checkout branchname 切换分支
git checkout -b branchname 创建并切换到分支
git merge branchname 合并某分支到当前分支 不可看出merge进程仅为提交模式
git branch -d branchname 刪除分支
git branch -D branchname  强行删除分支
git log --graph 查看分支合并图
git merge --no-ff -m "" branchname 禁用fast模式 采用 git log 可以看出merge过程
bug分支
git stash 将工作现场存储
git stash list 查看stash内容列表
git stash apply stash@{0} 恢复并不删除此条stash
git stash drop stash@{0} 删除所选stash
git stash pop stash@{0} 恢复并且删除此条stash
多人模式
git push origin branchname 推送自己的修改
git pull 推送失敗之後可以試圖進行合并更新
git pull 时 notracking information 可以使用git branch --set-upstream to=origin/<branch> branchname 进行本地分支和远程分支链接
如果有冲突 解决冲突 本地提交 
解决掉冲突之后git push origin branchname 重新推送修改
标签 
git tag tagname commitid (默认为HEAD)
git tag 标签列表
git show tagname 查看对应标签的详细信息
git tag -a tagname -m “描述信息” commit id 
git tag -d tagname  删除标签
git push origin tagname 推送某个标签到远程
git push origin --tags 一次性推送到远程所有尚未推送的标签
git push origin ： refs/tags/<tagname>删除远程标签