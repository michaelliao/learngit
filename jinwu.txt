1、先有本地库-》后有远程库-》关联远程库
Git全局设置
git config --global user.name "jinwufeiyang"
git config --global user.email "643760501@qq.com"
创建git仓库
mkdir learngit
cd learngit
git init
touch README.md
git add README.md
git commit -m "first commit"
git remote add origin git@gitee.com:jinwufeiyang/learngit.git     关联远程库
git push -u origin master                                         关联后，提交
已有项目
cd existing_git_repo
git remote add origin git@gitee.com:jinwufeiyang/learngit.git
git push -u origin master


2、先创建远程库-》从远程库克隆
远程库准备好，下一步用命令 git clone克隆一个本地库
git clone git@gitee.com:jinwufeiyang/gitskills.git

3、分支管理
Git鼓励大量使用分支：

查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支：git checkout -b <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>



bug分支
git stash 把当前工作现场存储起来。等以后恢复继续工作。
git stash list 查看
git stash apply 恢复,但stash内容不删除，需要 git stash drop来删除
git stash pop

Feature分支
开发一个新feature，最好新建一个分支；如果要丢弃一个没有被合并过的分支，通过 git branch -D <name> 强行删除。

多人协作：
	git remote (-v)
	推送分支：
		推送分支，就是把该分支上的所有本地提交推送到远程库。推送时，要指定本地分支，这样，Git就会把该分支推送到远程库对应的远程分支上：
		git push origin master
		如果要推送其他分支，比如dev，就改成：
		git push origin dev
抓取分支：
	多人协作时，大家都会往master和dev分支上推送各自的修改。现在，模拟一个你的小伙伴，可以在另一台电脑（注意要把SSH Key添加到GitHub）或者同一台电脑的另一个目录下克隆： $ git clone git@github.com:michaelliao/learngit.git
	当你的小伙伴从远程库clone时，默认情况下，你的小伙伴只能看到本地的master分支。不信可以用git branch命令看看：
	$ git branch
	* master
	现在，你的小伙伴要在dev分支上开发，就必须创建远程origin的dev分支到本地，于是他用这个命令创建本地dev分支：
	$ git checkout -b dev origin/dev
	现在，他就可以在dev上继续修改，然后，时不时地把dev分支push到远程：
	$ git push origin dev
	















1、从远程仓库创建自己的分支分支
2、